version: 2

jobs:
  build:
    docker:
      - image: node:latest
    steps:
      - checkout
      - restore_cache:
          keys:
            - dependencies-{{ checksum "package.json" }}
            - dependencies-
      - run:
          command: |
            yarn install
      - save_cache:
          paths:
            - node_modules
          key: dependencies-{{ checksum "package.json" }}
      - run:
          name: prettier
          command: |
            yarn prettier --check
      - run:
          name: lint
          command: |
            yarn lint
      - run:
          name: typecheck
          command: |
            yarn typecheck
      - run:
          name: test
          command: |
            yarn test
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: Install Docker client
          command: |
            set -x
            VER="19.03.1"
            curl -L -o /tmp/docker-$VER.tgz https://download.docker.com/linux/static/stable/x86_64/docker-$VER.tgz
            tar -xz -C /tmp -f /tmp/docker-$VER.tgz
            mv /tmp/docker/* /usr/bin
      - run:
          name: build image
          command: |
            docker build -t hackaburg/website .
      - run:
          name: push image to docker hub
          command: |
            docker login -u $DOCKER_USER -p $DOCKER_PASSWORD
            docker push hackaburg/website
      - run:
          name: purge cloudflare cache
          command: |
            ./scripts/purge-cloudflare-cache.sh

workflows:
  version: 2
  deploy:
    jobs:
      - build:
          filters:
            branches:
              only:
                - master
